shadow$provide.module$node_modules$$monaco_editor$loader$lib$cjs$loader$index=function(global,require$jscomp$0,module,exports){function injectScripts(script){return document.body.appendChild(script)}function createScript(src){var script=document.createElement("script");return src&&(script.src=src),script}function getMonacoLoaderScript(configureLoader){var state=getState(function(_ref2){return{config:_ref2.config,reject:_ref2.reject}}),loaderScript=createScript("".concat(state.config.paths.vs,"/loader.js"));
loaderScript.onload=function(){return configureLoader()};loaderScript.onerror=state.reject;return loaderScript}function configureLoader(){var state=getState(function(_ref3){return{config:_ref3.config,resolve:_ref3.resolve,reject:_ref3.reject}}),require=window.require;require.config(state.config);require(["vs/editor/editor.main"],function(monaco){storeMonacoInstance(monaco);state.resolve(monaco)},function(error){state.reject(error)})}function storeMonacoInstance(monaco){getState().monaco||setState({monaco})}
Object.defineProperty(exports,"__esModule",{value:!0});var _rollupPluginBabelHelpers=require$jscomp$0("module$node_modules$$monaco_editor$loader$lib$cjs$_virtual$_rollupPluginBabelHelpers");global=require$jscomp$0("module$node_modules$state_local$lib$cjs$state_local");module=require$jscomp$0("module$node_modules$$monaco_editor$loader$lib$cjs$config$index");var index$1=require$jscomp$0("module$node_modules$$monaco_editor$loader$lib$cjs$validators$index"),compose=require$jscomp$0("module$node_modules$$monaco_editor$loader$lib$cjs$utils$compose"),
deepMerge=require$jscomp$0("module$node_modules$$monaco_editor$loader$lib$cjs$utils$deepMerge"),makeCancelable=require$jscomp$0("module$node_modules$$monaco_editor$loader$lib$cjs$utils$makeCancelable");require$jscomp$0=(global&&"object"===typeof global&&"default"in global?global:{"default":global})["default"].create({config:module["default"],isInitialized:!1,resolve:null,reject:null,monaco:null});require$jscomp$0=_rollupPluginBabelHelpers.slicedToArray(require$jscomp$0,2);var getState=require$jscomp$0[0],
setState=require$jscomp$0[1],wrapperPromise=new Promise(function(resolve,reject){return setState({resolve,reject})});exports.default={config:function(globalConfig){globalConfig=index$1["default"].config(globalConfig);var monaco=globalConfig.monaco,config=_rollupPluginBabelHelpers.objectWithoutProperties(globalConfig,["monaco"]);setState(function(state){return{config:deepMerge["default"](state.config,config),monaco}})},init:function(){var state=getState(function(_ref){return{monaco:_ref.monaco,isInitialized:_ref.isInitialized,
resolve:_ref.resolve}});if(!state.isInitialized){setState({isInitialized:!0});if(state.monaco)return state.resolve(state.monaco),makeCancelable["default"](wrapperPromise);if(window.monaco&&window.monaco.editor)return storeMonacoInstance(window.monaco),state.resolve(window.monaco),makeCancelable["default"](wrapperPromise);compose["default"](injectScripts,getMonacoLoaderScript)(configureLoader)}return makeCancelable["default"](wrapperPromise)},__getMonacoInstance:function(){return getState(function(_ref4){return _ref4.monaco})}}}
//# sourceMappingURL=module$node_modules$$monaco_editor$loader$lib$cjs$loader$index.js.map
