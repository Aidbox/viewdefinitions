{"version":3,"sources":["suitkin/components/typography.cljc"],"mappings":"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","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","suitkin.components.typography/h1","seq47414","G__47415","cljs.core/first","cljs.core/next","self__5754__auto__","options","content","cljs.core.merge","cljs.core.dissoc","suitkin.components.typography/label","seq47418","self__5755__auto__","cljs.core/seq","options?","cljs.core/map?","elements","cljs.core.into","suitkin.components.typography/span","seq47425","G__47426","properties","suitkin.components.typography/kv-list","entries","iter__5523__auto__","s__47447","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__47449","cljs.core/chunk-buffer","i__47448","vec__47475","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__47446","cljs.core/chunk-rest","vec__47483","cljs.core/cons","cljs.core/rest","title","value","cljs.core/not-empty","suitkin.components.typography/expandeable-text","seq47495","G__47496","open?","suitkin.utils/ratom","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/not","suitkin.utils/public-src","suitkin.components.typography/assistive-text","seq47546","suitkin.components.typography/divider-with-text","text","cljs.core/chunk-first"],"sourcesContent":["(ns suitkin.components.typography\n  (:require\n   [suitkin.utils :as u]\n   [stylo.core :refer [c]]))\n\n(defn h1\n  [options & content]\n  [:h1 (merge {:class [(c {:font-family \"Inter\"\n                           :font-size   \"28px\"\n                           :font-weight \"700\"\n                           :color       \"#212636\"})\n                       (:class options)]}\n              (dissoc options :class))\n   content])\n\n(defn label\n  [& content]\n  (let [options? (map? (first content))\n        options  (when options? (first content))\n        elements (if options? (next content) content)]\n    (into \n     [:label (merge {:class [(c {:font-family \"Inter\"\n                                 :margin-left \"1px\"\n                                 :font-size   \"14px\"\n                                 :font-weight \"400\"\n                                 :line-height \"20px\"\n                                 :margin-bottom \"6px\"\n                                 :color         \"#010205\"})\n                             (:class options)]}\n                    (dissoc options :class))]\n     elements)))\n\n(defn span\n  [properties & content]\n  [:span {:class [(c {:font-family \"Inter\"\n                      :display \"inline-block\"\n                      :font-size \"14px\"\n                      :font-weight \"400\"})\n                  (:class properties)]}\n   content])\n\n(defn kv-list\n  [properties entries]\n  [:div\n   (for [[title value] entries\n         :when (not-empty value)] ^{:key title}\n     [:div {:class (c [:mb 0.5] :flex :flex-wrap [:col-gap 1.5])}\n      [:span {:class [(c {:color \"var(--basic-gray-6, #616471)\" :font-weight \"500\"})\n                      (:title-class properties)] } (str title \": \")]\n      [:div {:data-key title} value]])])\n\n(defn expandeable-text\n  [properties & content]\n  (let [open? (u/ratom false)]\n    (fn [properties content]\n      (if (:expandeable? properties)\n        [:div {:class (c {:font-family \"Inter\" :line-height \"20px\"})}  \n         [:span {:style (when-not @open?\n                          {:-webkit-line-clamp (:max-lines properties 3)\n                           :-webkit-box-orient \"vertical\"\n                           :overflow           \"hidden\"\n                           :text-overflow      \"ellipsis\"})\n                 :class [(c {:display \"-webkit-box\" :border-bottom      \"1px dashed #BFC1C7\"})\n                         (:class properties)]}\n          content]\n         [:div {:class (c :flex :justify-center)}\n          [:div {:on-click #(swap! open? not)\n                 :class (c [:px 4]\n                           [:hover {:opacity \"0.8\"}]\n                           {:cursor \"pointer\"\n                            :width \"max-content\"\n                            :background-color \"#EDEEF1\"\n                            :border \"1px solid #BFC1C7\"\n                            :border-top \"none\"\n                            :border-radius \"0 0 4px 4px\"})}\n           [:img {:width \"16\" \n                  :height \"16\"\n                  :src (if @open?\n                         (u/public-src \"/suitkin/img/icon/ic-chevron-up-16.svg\")\n                         (u/public-src \"/suitkin/img/icon/ic-chevron-down-16.svg\"))}]]]]\n        [:span {:class (:class properties)} content]))))\n\n(defn assistive-text\n  [& content]\n  (let [options? (map? (first content))\n        options  (when options? (first content))\n        elements (if options? (next content) content)]\n    (into \n     [:span (merge {:class [(c {:font-family \"Inter\"\n                                :font-size   \"14px\"\n                                :font-weight \"400\"\n                                :line-height \"20px\"\n                                :color \"#DF351F\"})\n                            (:class options)]}\n                   (dissoc options :class))]\n     elements)))\n\n(defn divider-with-text\n  [options text]\n  [:div {:class [(c :flex :justify-center :items-center) (:s/root-class options)]}\n   [:hr {:class (c {:border \"1px solid var(--basic-gray-2)\"} :w-full)}]\n   [:span {:class (c [:px 3] {:color \"var(--basic-gray-5)\"})} text]\n   [:hr {:class (c {:border \"1px solid var(--basic-gray-2)\"} :w-full)}]])\n"]}