{"version":3,"sources":["suitkin/utils.cljc"],"mappings":";AAOS;;;0BAAA,AAAAA,YAAA,0BAAA,hEAAaC;AAGtB,2BAAA,3BAAMC,8DACHC;AADH,AAEE,oDAAc,iBAAA,AAAKE;gBAAL,GAAA,CAAAD,kBAAqCE;AAArC,QAAAF,JAAuDG;AAAvD,AAAA;;AAAA,AAAA,MAAAH;;;OACIH,oEAAUE;;AAE9B,AAAA,oBAAA,4BAAAK,hDAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,uDAAAF;;;AAAA,AAAA,CAAA,yDAAA,zDAAME,oEACDI;AADL,AAEW,OAACC,8CAAMC,YAAeF;;;AAFjC,CAAA,4CAAA,5CAAMJ;;AAAN;AAAA,CAAA,sCAAA,WAAAC,jDAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAKA,iCAAA,jCAAMM,0EACHC,QAAQC;AADX,AAEW,OAACC,qBAAwBF,QAAQC;;AAG5C,iCAAA,jCAAME,0EACHH;AADH,AAEW,OAACI,qBAAwBJ;;AAGpC,oCAAA,pCAAMK,gFACHL;AADH,AAEW,OAACM,wBAA2BN;;AAGvC,sBAAA,tBAAMO,oDACHN;AADH,AAEW,OAACO,gDAAkBP;;AAG9B,6BAAA,7BAAMQ,kEACHC;AADH,AAEW,OAAA,AAAIA;;AAGf,2BAAA,3BAAMC,8DACHV;AADH,AAEE,GAAM,OAASA;AAAf,AACW,OAACW,UAAaX;;AADzB;;;AAKF,2BAAA,3BAAMY,8DACHZ;AADH,AAEE,oBAAMA;AAAN,AACW,OAACa,UAAab;;AADzB;;;AAIF,oCAAA,pCAAMc,gFACHC;AADH,AAEW,gDAAA,KAAA,9CAACC,eAAkB,AAACC,qBAAQF;;AAGvC,oCAAA,pCAAMG,gFACHC;AADH,AAEE,GAAM,AAACzB,cAAIyB;AAAX,AACW,IAAA,AAAK,2IAAA,2EAAA,/MAACE,0DAAQ,AAACC,WAAcH;gBAA7B,GAAA,CAAAC,kBAEYG;AAFZ,QAAAH,JAEqBI;AAFrB,AAGO,qGAAA,QAAA,7GAACC;;AAHR;;AAAA,AAAA,MAAAL;;;;AADX","names":["js/goog.define","suitkin.utils/CLASSPATH","suitkin.utils/public-src","src","e46949","js/suitkin_public_prefix","js/ReferenceError","_","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","suitkin.utils/log","seq46954","self__5755__auto__","cljs.core/seq","arguments","cljs.core.apply","js/console.log","suitkin.utils/set-storage-item","keyname","value","js/localStorage.setItem","suitkin.utils/get-storage-item","js/localStorage.getItem","suitkin.utils/remove-storage-item","js/localStorage.removeItem","suitkin.utils/ratom","reagent.core.atom","suitkin.utils/target-value","event","suitkin.utils/encode-uri","js/encodeURI","suitkin.utils/decode-uri","js/decodeURI","suitkin.utils/edn->json-pretty","edn","js/JSON.stringify","cljs.core/clj->js","suitkin.utils/json-string->edn","json-string","e46990","cljs.core.js__GT_clj","js/JSON.parse","js/Error","e","cljs.core.prn"],"sourcesContent":["(ns suitkin.utils\n  #?(:cljs (:require [reagent.core])\n     :clj  (:require [clojure.string]\n                     [cheshire.core]))\n  #?(:clj  (:import java.net.URLEncoder\n                    java.net.URLDecoder)))\n\n#?(:cljs (goog-define CLASSPATH \"\")\n   :clj  (def CLASSPATH \"\"))\n\n(defn public-src\n  [src]\n  (str #?(:cljs (try js/suitkin_public_prefix (catch js/ReferenceError _ \"\"))\n          :clj  \"\") CLASSPATH src))\n\n(defn log\n  [& arguments]\n  #?(:cljs (apply js/console.log arguments)\n     :clj  (apply println arguments)))\n\n(defn set-storage-item\n  [keyname value]\n  #?(:cljs (js/localStorage.setItem keyname value)\n     :clj  nil))\n\n(defn get-storage-item\n  [keyname]\n  #?(:cljs (js/localStorage.getItem keyname)\n     :clj  nil))\n\n(defn remove-storage-item\n  [keyname]\n  #?(:cljs (js/localStorage.removeItem keyname)\n     :clj  nil))\n\n(defn ratom\n  [value]\n  #?(:cljs (reagent.core/atom value)\n     :clj  (atom value)))\n\n(defn target-value\n  [event]\n  #?(:cljs (.. event -target -value)\n     :clj  (-> @event :target :value)))\n\n(defn encode-uri\n  [value]\n  (when (string? value)\n    #?(:cljs (js/encodeURI value)\n       :clj  (clojure.string/replace (java.net.URLEncoder/encode value \"UTF-8\")\n                                     \"+\" \"%20\"))))\n\n(defn decode-uri\n  [value]\n  (when value\n    #?(:cljs (js/decodeURI value)\n       :clj  (java.net.URLDecoder/decode value))))\n\n(defn edn->json-pretty\n  [edn]\n  #?(:cljs (js/JSON.stringify (clj->js edn) nil 2)\n     :clj  (cheshire.core/generate-string edn {:pretty true})))\n\n(defn json-string->edn\n  [json-string]\n  (when (seq json-string)\n    #?(:cljs (try (js->clj (js/JSON.parse json-string)\n                           :keywordize-keys true)\n                  (catch js/Error e\n                    (prn \"error\" ::json-string->edn)\n                    {}))\n       :clj (cheshire.core/parse-string json-string keyword ))))\n"]}