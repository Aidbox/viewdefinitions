shadow$provide.module$node_modules$state_local$lib$cjs$state_local=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=
arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){var value=source[key];key in target?Object.defineProperty(target,key,{value,enumerable:!0,configurable:!0,writable:!0}):target[key]=value}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function compose(){for(var _len=arguments.length,
fns=Array(_len),_key=0;_key<_len;_key++)fns[_key]=arguments[_key];return function(x){return fns.reduceRight(function(y,f){return f(y)},x)}}function curry(fn){return function curried(){for(var _this=this,_len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return args.length>=fn.length?fn.apply(this,args):function(){for(var _len3=arguments.length,nextArgs=Array(_len3),_key3=0;_key3<_len3;_key3++)nextArgs[_key3]=arguments[_key3];return curried.apply(_this,
[].concat(args,nextArgs))}}}function isObject(value){return{}.toString.call(value).includes("Object")}function isFunction(value){return"function"===typeof value}function extractChanges(state,causedChanges){return isFunction(causedChanges)?causedChanges(state.current):causedChanges}function updateState(state,changes){state.current=_objectSpread2(_objectSpread2({},state.current),changes);return changes}function didStateUpdate(state,handler,changes){isFunction(handler)?handler(state.current):Object.keys(changes).forEach(function(field){var _handler$field;
return null===(_handler$field=handler[field])||void 0===_handler$field?void 0:_handler$field.call(handler,state.current[field])});return changes}var errorHandler=curry(function(errorMessages,type){throw Error(errorMessages[type]||errorMessages["default"]);})({initialIsRequired:"initial state is required",initialType:"initial state should be an object",initialContent:"initial state shouldn't be an empty object",handlerType:"handler should be an object or a function",handlersType:"all handlers should be a functions",
selectorType:"selector should be a function",changeType:"provided value of changes should be an object",changeField:'it seams you want to change a field in the state which is not specified in the "initial" state',"default":"an unknown error accured in `state-local` package"}),validators={changes:function(initial,changes){isObject(changes)||errorHandler("changeType");Object.keys(changes).some(function(field){return!Object.prototype.hasOwnProperty.call(initial,field)})&&errorHandler("changeField");
return changes},selector:function(selector){isFunction(selector)||errorHandler("selectorType")},handler:function(handler){isFunction(handler)||isObject(handler)||errorHandler("handlerType");isObject(handler)&&Object.values(handler).some(function(_handler){return!isFunction(_handler)})&&errorHandler("handlersType")},initial:function(initial){initial||errorHandler("initialIsRequired");isObject(initial)||errorHandler("initialType");Object.keys(initial).length||errorHandler("initialContent")}};module.exports=
{create:function(initial){var handler=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};validators.initial(initial);validators.handler(handler);var state$jscomp$0={current:initial},didUpdate=curry(didStateUpdate)(state$jscomp$0,handler),update=curry(updateState)(state$jscomp$0),validate=curry(validators.changes)(initial),getChanges=curry(extractChanges)(state$jscomp$0);return[function(){var selector=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(state){return state};validators.selector(selector);
return selector(state$jscomp$0.current)},function(causedChanges){compose(didUpdate,update,validate,getChanges)(causedChanges)}]}}}
//# sourceMappingURL=module$node_modules$state_local$lib$cjs$state_local.js.map
