{"version":3,"sources":["client/core.cljs"],"mappings":";AAUA,wBAAA,xBAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,AAAKC,uBACH,6BAAA,2CAAA,mFAAA,3JAACC;AAEH,yBAAA,zBAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,qCAAkBJ,QAAQJ;;AAE5C,mBAAA,nBAAMS;AAAN,AACE,AAACC;;AAED,uBAAA,mFAAA,1GAACC;;AACD,AAACd;;AACD,OAACK;;AAEH,AAACO","names":["client.core/dev-setup","client.config/debug?","cljs.core.println","client.core/compiler","reagent.core/create-compiler","client.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","client.views.core/main-panel","client.core/init","client.routes/start!","re-frame.core/dispatch"],"sourcesContent":["(ns client.core\n  (:require\n   [reagent.dom :as rdom]\n   [reagent.core :as r]\n   [re-frame.core :as re-frame]\n   [client.events :as events]\n   [client.routes :as routes]\n   [client.views.core :as views]\n   [client.config :as config]))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(def compiler\n  (r/create-compiler {:function-components true}))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [views/main-panel] root-el compiler)))\n\n(defn init []\n  (routes/start!)\n\n  (re-frame/dispatch [::events/initialize-db])\n  (dev-setup)\n  (mount-root))\n\n(init)\n"]}